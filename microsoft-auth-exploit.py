#!/usr/bin/env python3

# Fluffery was Here - 28th June 2022 # major auth exploit! What can go wrong?
# MaxRockatasky - 27th June 2022
# ArjixWasTaken - 28th June 2022  # just some refactoring
import requests
import os

# these are microsoft authentication tokens,
# something other than the minecraft access token
# user should fill in the following data
# which can be found in multimc/accounts.json:

refresh_token = ""
token = ""

# Code below this line
headers = {
    "Content-Type": "application/json",
    "Accept": "application/json"
}

payload = {
    "Properties": {
        "AuthMethod": "RPS",
        "SiteName": "user.auth.xboxlive.com",
        "RpsTicket": f"d={token}"
    },
    "RelyingParty": "http://auth.xboxlive.com",
    "TokenType": "JWT"
}

prompt = "Enter the corresponding number:\n"
choices = [
    "\t1 - Validate Microsoft Token",
    "\t2 - Refresh Microsoft Token WIP",
    "\t3 - Obtain Minecraft Access Token"
]
prompt = prompt + "\n".join(choices) + "\nChoice: [1]: "
choice = input(prompt)

if not choice.strip():
    # We default to 1
    choice = "1"

while not choice.strip().isnumeric():
    os.system("cls || clear")
    print("Please enter a valid number from the given list -> [1,2,3]")
    choice = input(prompt)
choice = int(choice)


def check_status(status: int):
    status = ["invalid", "valid"]
    i = status == 200
    print("{}\nThe token is {}\n{}".format(
        ("-"*18),
        status[int(i)],
        ("-"*18)
    ))
    return i


def validate_token():
    r = requests.post(
        "https://user.auth.xboxlive.com/user/authenticate",
        headers=headers,
        json=payload
    )

    print(r.status_code)
    print(r.content)
    check_status(r.status_code)


def refresh_token():
    raise NotImplementedError("This option is not implemented yet.")


def obtain_token():
    # xbox live authentication request
    r = requests.post(
        "https://user.auth.xboxlive.com/user/authenticate",
        headers=headers,
        json=payload,
    )

    print(r.status_code)
    print(r.content)

    if not check_status(r.status_code):
        return

    xbl_token = r.json()["Token"]
    userhash = r.json()["DisplayClaims"]["xui"][0]["uhs"]
    print(xbl_token)
    print(userhash)

    # xsts authentication request
    json = {
        "Properties": {
            "SandboxId": "RETAIL",
            "UserTokens": [xbl_token]
        },
        "RelyingParty": "rp://api.minecraftservices.com/",
        "TokenType": "JWT"
    }

    r = requests.post(
        "https://xsts.auth.xboxlive.com/xsts/authorize",
        headers=headers,
        json=json
    )

    print(r.status_code)
    print(r.content)

    if not check_status(r.status_code):
        return

    xsts_token = r.json()["Token"]

    # minecraft authentication request
    r = requests.post(
        "https://api.minecraftservices.com/authentication/login_with_xbox",
        json={"identityToken": f"XBL3.0 x={userhash};{xsts_token}"},
        headers=headers
    )

    print(r.status_code)
    print(r.content)

    if not check_status(r.status_code):
        return

    print("MINECRAFT ACCESS TOKEN:")
    print(r.json()["access_token"])


tasks = [validate_token, refresh_token, obtain_token]
tasks[choice-1]()
